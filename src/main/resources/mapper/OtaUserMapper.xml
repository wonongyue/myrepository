<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boot.dao.OtaUserMapper">
  <resultMap id="BaseResultMap" type="com.boot.model.OtaUser">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="userCode" jdbcType="VARCHAR" property="usercode" />
    <result column="passwordHash" jdbcType="CHAR" property="passwordhash" />
    <result column="admin" jdbcType="BIT" property="admin" />
    <result column="userEmail" jdbcType="VARCHAR" property="useremail" />
    <result column="hashedPassword" jdbcType="CHAR" property="hashedpassword" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_Modified_Time" jdbcType="TIMESTAMP" property="lastModifiedTime" />
    <result column="version" jdbcType="SMALLINT" property="version" />
    <result column="last_sign_in_time" jdbcType="TIMESTAMP" property="lastSignInTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userCode, passwordHash, admin, userEmail, hashedPassword, role_id, status, create_time, 
    last_Modified_Time, version, last_sign_in_time
  </sql>
  <select id="selectByExample" parameterType="com.boot.model.OtaUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ota_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.boot.model.OtaUserExample">
    delete from ota_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.boot.model.OtaUser">
    insert into ota_user (id, userCode, passwordHash, 
      admin, userEmail, hashedPassword, 
      role_id, status, create_time, 
      last_Modified_Time, version, last_sign_in_time
      )
    values (#{id,jdbcType=INTEGER}, #{usercode,jdbcType=VARCHAR}, #{passwordhash,jdbcType=CHAR}, 
      #{admin,jdbcType=BIT}, #{useremail,jdbcType=VARCHAR}, #{hashedpassword,jdbcType=CHAR}, 
      #{roleId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastModifiedTime,jdbcType=TIMESTAMP}, #{version,jdbcType=SMALLINT}, #{lastSignInTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.boot.model.OtaUser">
    insert into ota_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="usercode != null">
        userCode,
      </if>
      <if test="passwordhash != null">
        passwordHash,
      </if>
      <if test="admin != null">
        admin,
      </if>
      <if test="useremail != null">
        userEmail,
      </if>
      <if test="hashedpassword != null">
        hashedPassword,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastModifiedTime != null">
        last_Modified_Time,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="lastSignInTime != null">
        last_sign_in_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="usercode != null">
        #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="passwordhash != null">
        #{passwordhash,jdbcType=CHAR},
      </if>
      <if test="admin != null">
        #{admin,jdbcType=BIT},
      </if>
      <if test="useremail != null">
        #{useremail,jdbcType=VARCHAR},
      </if>
      <if test="hashedpassword != null">
        #{hashedpassword,jdbcType=CHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedTime != null">
        #{lastModifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=SMALLINT},
      </if>
      <if test="lastSignInTime != null">
        #{lastSignInTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.boot.model.OtaUserExample" resultType="java.lang.Long">
    select count(*) from ota_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ota_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.usercode != null">
        userCode = #{record.usercode,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordhash != null">
        passwordHash = #{record.passwordhash,jdbcType=CHAR},
      </if>
      <if test="record.admin != null">
        admin = #{record.admin,jdbcType=BIT},
      </if>
      <if test="record.useremail != null">
        userEmail = #{record.useremail,jdbcType=VARCHAR},
      </if>
      <if test="record.hashedpassword != null">
        hashedPassword = #{record.hashedpassword,jdbcType=CHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifiedTime != null">
        last_Modified_Time = #{record.lastModifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=SMALLINT},
      </if>
      <if test="record.lastSignInTime != null">
        last_sign_in_time = #{record.lastSignInTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ota_user
    set id = #{record.id,jdbcType=INTEGER},
      userCode = #{record.usercode,jdbcType=VARCHAR},
      passwordHash = #{record.passwordhash,jdbcType=CHAR},
      admin = #{record.admin,jdbcType=BIT},
      userEmail = #{record.useremail,jdbcType=VARCHAR},
      hashedPassword = #{record.hashedpassword,jdbcType=CHAR},
      role_id = #{record.roleId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_Modified_Time = #{record.lastModifiedTime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=SMALLINT},
      last_sign_in_time = #{record.lastSignInTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>